<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Pazams Blog]]></title>
  <subtitle><![CDATA[Full Stack Web Development]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://pazams.com/"/>
  <updated>2015-12-26T15:08:02.451Z</updated>
  <id>http://pazams.com/</id>
  
  <author>
    <name><![CDATA[Maor Zamski]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Github - syncing the gh-pages branch]]></title>
    <link href="http://pazams.com/Github-syncing-the-gh-pages-branch/"/>
    <id>http://pazams.com/Github-syncing-the-gh-pages-branch/</id>
    <published>2015-12-25T11:07:47.000Z</published>
    <updated>2015-12-26T15:08:02.451Z</updated>
    <content type="html"><![CDATA[<p>gh-pages branch is used with github repos as a front page for the repository. It is used to display demos, documentations, a stylized readme, and more. Some difficulties arise when the gh-pages branch needs to reference or contain files that originate from the master branch.</p>
<a id="more"></a>
<h2>Work flows</h2>
<p>Different work flow suggestions exists (see <a href="http://lea.verou.me/2011/10/easily-keep-gh-pages-in-sync-with-master/" target="_blank" rel="external">here</a>, and <a href="http://oli.jp/2011/github-pages-workflow/" target="_blank" rel="external">there</a>). These suggestions work, but I find that syncing the gh-pages so it would contain the latest code from master to be a bad practice. The DRY principle should be imposed here- <strong>each file should either be on master or gh-pages branch. Not both, and not resorting to use gh-pages as the master branch.</strong></p>
<h2>A different approach</h2>
<p>Create the gh-pages as an orphan branch (also Github's recommendation):</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout <span class="comment">--orphan gh-pages</span></span><br><span class="line">git rm -rf .</span><br></pre></td></tr></table></figure>
<h3>dealing with special files</h3>
<ol>
<li>
<p><strong>files from master that need to be referenced from gh-pages.</strong> For example- A demo page for a js client side widget. The demo should reference the distribution .js files. The easiest way the achieve this is to keep the distribution files in master, while inside gh-pages, use a 3rd party CDN to reference them such as <a href="https://rawgit.com/" target="_blank" rel="external">RawGit</a>.</p>
</li>
<li>
<p><strong>files that get generated in master branch, but belong to gh-pages.</strong> For example- documentation files that are auto generated by a tool that scans the source files. This is a bit more tricky:</p>
</li>
</ol>
<div style="margin: 0 20px;"> 
The first time the files get generated on master, there's no problem switching to the gh-pages branch, and then stage and commit them. Trying to do so in the second time gets:
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error: The following untracked working tree files would be overwritten by checkout:</span><br></pre></td></tr></table></figure>
<p>assuming the files are in a folder named <code>documentation</code>, the way around this is:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add documentation</span><br><span class="line">git stash</span><br><span class="line">git checkout gh-pages</span><br><span class="line">git checkout stash@&#123;<span class="number">0</span>&#125; -- documentation/</span><br></pre></td></tr></table></figure>
<p>using <code>git checkout stash@{0}</code> is preferred here over <code>git stash pop</code>, since the stash command will result in conflicts which you will need to resolve manually (note the stash command doesn't take <code>--theirs</code>).</p>
</div>
]]></content>
    <summary type="html">
    <![CDATA[<p>gh-pages branch is used with github repos as a front page for the repository. It is used to display demos, documentations, a stylized readme, and more. Some difficulties arise when the gh-pages branch needs to reference or contain files that originate from the master branch.</p>]]>
    
    </summary>
    
      <category term="github gh-pages" scheme="http://pazams.com/tags/github-gh-pages/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Programming Driven Design]]></title>
    <link href="http://pazams.com/Programming-Driven-Design/"/>
    <id>http://pazams.com/Programming-Driven-Design/</id>
    <published>2015-12-21T22:19:41.000Z</published>
    <updated>2015-12-26T11:39:02.176Z</updated>
    <content type="html"><![CDATA[<p>The UI design of a new web application is usually driven by ux, product, art and other related considerations. Programming comes into play after the design is <a href="http://designmeister.com/2013/07/03/workflow-for-website-development/" target="_blank" rel="external">finished</a>. If programming considerations are taken at the UI design time, it will be limited just to verifying if a new feature is technically possible. The following example will try to demonstrate why in some applications, programming considerations should also drive the design.</p>
<a id="more"></a>
<h2>a responsive application example</h2>
<p>A design team release a responsive design for a dev team. It contains the following heading sizes:</p>
<table>
<thead>
<tr>
<th></th>
<th>Phones</th>
<th>Tablets</th>
<th>Desktops</th>
</tr>
</thead>
<tbody>
<tr>
<td>h1</td>
<td>42px</td>
<td>49px</td>
<td>70px</td>
</tr>
<tr>
<td>h2</td>
<td>18px</td>
<td>22px</td>
<td>30px</td>
</tr>
<tr>
<td>h3</td>
<td>15px</td>
<td>17.5px</td>
<td>25px</td>
</tr>
</tbody>
</table>
<p>These styles translate to the following css rules (<a href="http://codepen.io/anon/pen/RrGQGj?editors=110" target="_blank" rel="external">codepen1</a>):</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Phones */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen and (min-width : <span class="number">320px</span>)</span>&#123;</span><br><span class="line">    <span class="tag">h1</span> <span class="rules">&#123;</span><br><span class="line">        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">42px</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">h2</span> <span class="rules">&#123;</span><br><span class="line">        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">18px</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">h3</span> <span class="rules">&#123;</span><br><span class="line">        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">15px</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Tablets */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen and (min-width : <span class="number">768px</span>)</span>&#123;</span><br><span class="line">    <span class="tag">h1</span> <span class="rules">&#123;</span><br><span class="line">        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">49px</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">h2</span> <span class="rules">&#123;</span><br><span class="line">        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">22px</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">h3</span> <span class="rules">&#123;</span><br><span class="line">        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">17.5px</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Desktops */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen and (min-width : <span class="number">992px</span>)</span>&#123;</span><br><span class="line">    <span class="tag">h1</span> <span class="rules">&#123;</span><br><span class="line">        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">70px</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">h2</span> <span class="rules">&#123;</span><br><span class="line">        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">30px</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">h3</span> <span class="rules">&#123;</span><br><span class="line">        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">25px</span></span></span>;</span><br><span class="line">    &#125;</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>what if</strong> <code>h2</code> Tablet size would have dropped down 1 pixel to 21px:</p>
<table>
<thead>
<tr>
<th></th>
<th>Phones</th>
<th>Tablets</th>
<th>Desktops</th>
</tr>
</thead>
<tbody>
<tr>
<td>h1</td>
<td>42px</td>
<td>49px</td>
<td>70px</td>
</tr>
<tr>
<td>h2</td>
<td>18px</td>
<td><strong>21px</strong></td>
<td>30px</td>
</tr>
<tr>
<td>h3</td>
<td>15px</td>
<td>17.5px</td>
<td>25px</td>
</tr>
</tbody>
</table>
<p>Since now the headings relate with the same ratios between devices, the previous css rules can now be written with simple <a href="http://snook.ca/archives/html_and_css/font-size-with-rem" target="_blank" rel="external">REM</a> units (<a href="http://codepen.io/anon/pen/QyKQKY?editors=110" target="_blank" rel="external">codepen2</a>):</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Phones */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen and (min-width : <span class="number">320px</span>)</span>&#123;</span><br><span class="line">    <span class="tag">html</span> <span class="rules">&#123;</span><br><span class="line">        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">6px</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Tablets */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen and (min-width : <span class="number">768px</span>)</span>&#123;</span><br><span class="line">    <span class="tag">html</span> <span class="rules">&#123;</span><br><span class="line">        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">7px</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Desktops */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen and (min-width : <span class="number">992px</span>)</span>&#123;</span><br><span class="line">    <span class="tag">html</span> <span class="rules">&#123;</span><br><span class="line">        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">10px</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">h1</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">7rem</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">h2</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">3rem</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">h3</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">2.5rem</span></span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<p>Notice that in this setup, each heading size style needs just 1 rule, in contrast to 3 rules living in different media queries. The REM version reduced the lines of code count by 27%, but this can go up to 67% as the design gets bigger, and as also REMs can be utilized everywhere (padding,margin,line-height,etc'). This change is not only about reducing lines of code, it's about clarity, ease of maintenance &amp; development time.</p>
<h2>Analysis</h2>
<p>Was it a conscious decision to have <code>h2</code> in a slightly different ratio between devices? or a result of &quot;eye-balling&quot; the sizes on different .psd files?</p>
<p>In either case, a developer approaching a designer with this issue will have a hard time selling there's an issue at all. The designer will not be keen to revise his art just so it would satisfy some &quot;math rules&quot;. In some way, the designer is right. However, the essence of a responsive design is broader than the design scope- one of the reasons for choosing responsive design over adaptive design is to have 1 code base. Having 1 code base where the UI is split in 3 different CSS chunks, each at their own media query, misses the original intention.</p>
<h2>Conclusion</h2>
<p>The sequential work flow of &quot;design first, develop later&quot;, has some drawbacks when building some web applications as illustrated in the example above. Developers should have a way to drive design decisions that would otherwise be looked over. This suggestion is less significant if the design team also codes, or if they <a href="http://webdesign.tutsplus.com/articles/my-thoughts-on-designing-in-the-browser-vs-designing-in-photoshop--cms-23405" target="_blank" rel="external">design in the browser</a>.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>The UI design of a new web application is usually driven by ux, product, art and other related considerations. Programming comes into play after the design is <a href="http://designmeister.com/2013/07/03/workflow-for-website-development/">finished</a>. If programming considerations are taken at the UI design time, it will be limited just to verifying if a new feature is technically possible. The following example will try to demonstrate why in some applications, programming considerations should also drive the design.</p>]]>
    
    </summary>
    
      <category term="ui css" scheme="http://pazams.com/tags/ui-css/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Vim - how to delete (not cut)?]]></title>
    <link href="http://pazams.com/Vim-how-to-delete-not-cut/"/>
    <id>http://pazams.com/Vim-how-to-delete-not-cut/</id>
    <published>2015-12-19T23:00:23.000Z</published>
    <updated>2015-12-26T13:23:48.854Z</updated>
    <content type="html"><![CDATA[<p>vim's delete command, is a core command used in every editing session. Delete combos such as <code>dw</code>, <code>dd</code>, <code>D</code>, <code>di&quot;</code> will make you happy you chose vim. However, there's a known caveat with the delete command.</p>
<a id="more"></a>
<h2>The problem</h2>
<p>the delete command also puts the deleted content into the default register, effectively making the 'delete' command a 'cut' command. This becomes a pain when after cutting one word, you realize you also need to delete some chars with <code>x</code> or words with <code>d</code> before pasting the original first word. The other <code>x</code>'s and <code>d</code>'s will override the first word.</p>
<h2>Common solutions</h2>
<ol>
<li><strong>Always paste immediately after cutting.</strong> This will be OK if you use vim for the occasional editing in a <code>ssh</code> session. If you use vim as a primary editor, this solution won't suffice.</li>
<li><strong>Use clipboard managers plugins such as YankRing / YankStack.</strong> This helps relief the pain as you can cycle through previous register entries, but it doesn't solve the problem at it's root- the need for different commands for 'cut' and 'delete'. You should use a clipboard manager at any case for yanks. My personal preference is to use OS clipboard managers over plugins.</li>
<li><strong>Generate mappings to separate 'cut' and 'delete'.</strong> The Best solution. The related stackoverflow's question accepted <a href="http://stackoverflow.com/questions/11993851/vim-how-to-delete-not-cut" target="_blank" rel="external">answer</a> suggests a mapping which results in (assuming <code>leader</code> is set to <code>,</code>):</li>
</ol>
<div style="margin: 0 20px;"> 
<table>
<thead>
<tr>
<th>Keys</th>
<th>Result</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>,d</code></td>
<td>delete</td>
</tr>
<tr>
<td><code>d</code></td>
<td>cut</td>
</tr>
</tbody>
</table>
<p>I used this mapping for some time and it does the job quite well. But since 'delete' is much more frequent than 'cut' I switched the mappings around and create <a href="https://github.com/pazams/d-is-for-delete" target="_blank" rel="external">this repo</a> which results in (assuming <code>leader</code> is set to <code>,</code>):</p>
<table>
<thead>
<tr>
<th>Keys</th>
<th>Result</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>d</code></td>
<td>delete</td>
</tr>
<tr>
<td><code>,d</code></td>
<td>cut</td>
</tr>
</tbody>
</table>
<p>The mapping will also make <code>D</code>, <code>x</code>, <code>X</code> act as 'delete' rather than 'cut'.</p>
</div>
]]></content>
    <summary type="html">
    <![CDATA[<p>vim's delete command, is a core command used in every editing session. Delete combos such as <code>dw</code>, <code>dd</code>, <code>D</code>, <code>di&quot;</code> will make you happy you chose vim. However, there's a known caveat with the delete command.</p>]]>
    
    </summary>
    
  </entry>
  
</feed>
